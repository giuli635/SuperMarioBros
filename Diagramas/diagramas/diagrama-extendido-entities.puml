@startuml
abstract class BaseUpdatableEntity {
   #loaded: boolean
   +load()
   +unload()
   +loaded(): boolean 
}

class Block {
   #{static} SPRITES_FOLDER: String
   #collider: BlockCollider
   #graphicElement: GameGraphicElement
   +Block()
   +getGraphicElement(): GameGraphicElement 
   +getCollider(): BlockCollider 
}

abstract class Body {
   +setSprite(s: String)
   +adjustColliderToGraphicElement()
   +translate(dx: int, dy: int)
}

class Brick {
   #{static} SPRITES_FOLDER: String
   #collider: BrickCollider
   #graphicElement: GameGraphicElement
   +Brick()
   +getGraphicElement(): GameGraphicElement 
   +getCollider(): BrickCollider 
}

class Coin {
   #{static} SPRITES_FOLDER: String
   +final {static} POINTS: int
   #collider: CoinCollider
   #graphicElement: GameGraphicElement
   +Coin()
   +getGraphicElement(): GameGraphicElement 
   +getCollider(): CoinCollider 
   +update()
}

class EmptyBlock {
   #{static} SPRITES_FOLDER: String
   #collider: EmptyBlockCollider
   #graphicElement: GameGraphicElement
   +EmptyBlock()
   +getGraphicElement(): GameGraphicElement 
   +getCollider(): EmptyBlockCollider 
}package entities;

interface Entity {
   +getGraphicElement(): GameGraphicElement 
   +getCollider(): Collider 
}

class Pipe {
   #{static} FOLDER_PATH: String
   #{static} TOP_PIPE: String
   #{static} BASE_PIPE: String
   #collider: PipeCollider
   #graphicElement: GameGraphicElement
   +Pipe()
   +Pipe(i: int)
   +getGraphicElement(): GameGraphicElement 
   +getCollider(): PipeCollider 
}

class QuestionBlock {
   #{static} SPRITES_FOLDER: String
   #collider: QuestionBlockCollider
   #graphicElement: GameGraphicElement
   #depends: boolean
   #active: boolean
   #entity: UpdatableEntity
   +QuestionBlock(s: char)
   +getGraphicElement(): GameGraphicElement 
   +getCollider(): QuestionBlockCollider 
   +setDepends(b: boolean)
   +getDepends(): boolean 
   +interaction()
   +interaction(p: PowerUp)
   +releaseEntity(e: UpdatableEntity)
   +releaseEntity(c: Coin)
   +getActive(): boolean 
}

interface UpdatableEntity {
   +update()
   +loaded(): boolean 
   +load()
   +unload()
}

@enduml
