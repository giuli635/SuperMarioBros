@startuml
class Game <<Singleton>> {
    #{static} uniqueInstance: Game
    #toUpdateRegistry: Set<Entity>
    #currLevel: Level
    #mario: Mario
    +{static} instance(): Game
    #loadLevel()
    +registerToUpdate(e: Entity)
    +unregisterToUpdate(e: Entity)
    +getKeyPressed(key: int): boolean
    +getKeyReleased(key: int): boolean
    +{static} main()
}

class Level{
    #time: Duration
    #points: int
    +Level(time: Duration)
    +getPoints(): int
    +addPoints(p: int)
    +substractPoints(p: int)
}
note left of Level::time
Duration es la clase de Java
end note

class Menu <<Singleton>> {
    #{static} uniqueInstance: Menu
    +{static} instance(): Menu
    +selectMode(modo: int)
    +showModes()
    +showRanking()
    ' TODO: implementar la UI del menu
}

class Ranking <<Singleton>> {
    #rank: Map<String, Integer>
    #{static} uniqueInstance: Ranking
    +{static} instance(): Ranking
    +addEntry(player: String, points: int)
    +getRanking(): Iterable<Entry<String, Integer>>
}

class LevelReader <<Singleton>> {
    #{static} uniqueInstance: LevelReader
    +{static} instance(): LevelReader
    +createLevel(file: String): Level
}
@enduml
