@startuml
Game -> Character : update()
activate Character
Game -> CollisionsEngine : checkCollisions()
activate CollisionsEngine
CollisionsEngine -> CharacterCollider : collide(PowerUpCollider, Direction)
activate CharacterCollider
CollisionsEngine -> PowerUpCollider : collide(CharacterCollider, Direction)
activate PowerUpCollider
deactivate CollisionsEngine
CharacterCollider -> PowerUpCollider : handleCollision(this, Direction)
PowerUpCollider -> CharacterCollider : handleCollision(this, Direction)
deactivate CharacterCollider
PowerUpCollider -> PowerUp : apply(Character)
deactivate PowerUpCollider

activate PowerUp
alt PowerUp es SuperMushroom
    PowerUp -> Super : setState()
    activate Super
    Super -> Character : addCharacterState(Super)
    Super -> Character : addEnemyCollision(SuperEnemyCollision)
    Super -> Character : addBrickCollision(BreakBrickCollision)
    Super -> Game : registerToUpdate(Croucher)
    deactivate Super
else PowerUp es FireFlower
    PowerUp -> Fire : setState()
    activate Fire
    Fire -> Super : setState()
    activate Super
    Super -> Character : addCharacterState(Super)
    Super -> Character : addEnemyCollision(SuperEnemyCollision)
    Super -> Character : addBrickCollision(BreakBrickCollision)
    Super -> Game : registerToUpdate(Croucher)
    deactivate Super
    Fire -> Character : addCharacterState(Fire)
    Fire -> Game : registerToUpdate(FireBallThrower)
    deactivate Fire
else PowerUp es Star
    PowerUp -> Star : setState()
    activate Star
    Star -> Character : addCharacterState(Invincible)
    Star -> Character : addEnemyCollision(InvincibleEnemyCollision)
    deactivate Star
else PowerUp es GreenMushroom
    PowerUp -> Character : addLife()
end
deactivate Character

PowerUp -> Game : unregisterToUpdate(this)
deactivate PowerUp
@enduml
